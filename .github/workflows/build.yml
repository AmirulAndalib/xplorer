name: Build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
jobs:
    build-win:
        runs-on: windows-latest

        strategy:
            matrix:
                node-version: [14.x]

        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js
              uses: actions/setup-node@v2
              with:
                  cache: 'npm'

            - name: Update npm
              run: npm install --global npm@latest

            - name: Patch node-gyp to support Visual Studio 2019
              shell: powershell
              run: |
                  npm install --global node-gyp@latest
                  npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
            - run: yarn install --frozen-lockfile
            - name: Build on Windows
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: yarn build --publish=always

    build-mac:
        runs-on: macos-latest
        strategy:
            matrix:
                node-version: [14.x]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
            - run: yarn install --frozen-lockfile
            - name: Build on macOS
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: yarn build --publish=always

    build-linux:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]

        steps:
            - uses: actions/checkout@v2
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node-version }}
            - run: yarn install --frozen-lockfile
            - name: Build on Linux
              env:
                  GH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: yarn build --publish=always
